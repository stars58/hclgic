/*
THIS PROCEDURE KILLS A rogue query
AUTHOR : VINCENT NG
*/
DECLARE
  CURSOR C1 IS
       select a.inst_id,a.serial#,a.sql_id From gv$session a, gv$session_longops b
where a.inst_id=b.inst_id and a.sid=b.sid and a.serial#=b.serial# 
and b.sql=id'9tfc9d5crttwk' and b.elapsed_Seconds >60  and status='ACTIVE';

BEGIN
  FOR C1REC IN C1 LOOP
     EXECUTE IMMEDIATE 'ALTER SYSTEM KILL SESSION '''||C1REC.sid||','||C1REC.serial#||',@'||C1REC.inst_id||''' IMMEDIATE;' 
  END LOOP;
END;
/
exit;

=================================
BEGIN
    DBMS_SCHEDULER.CREATE_JOB (
            job_name => '"SPTSHUB"."KILL_ROUGE_QUERY"',
            job_type => 'PLSQL_BLOCK',
            job_action => 'DECLARE
  CURSOR C1 IS
       select inst_id,sid,serial#,sql_id From gv$session where  last_call_et >60  and status=''ACTIVE'' and type=''USER'' and sql_id='9tfc9d5crttwk';
BEGIN
  FOR C1REC IN C1 LOOP
     EXECUTE IMMEDIATE 
     ''ALTER SYSTEM KILL SESSION ''''''||C1REC.sid||'',''||C1REC.serial#||'',@'||C1REC.inst_id||'''' IMMEDIATE''; 
  END LOOP;
END ;',
            number_of_arguments => 0,
            start_date => TO_TIMESTAMP_TZ('2023-08-03 11:20:00.399717000 ASIA/SINGAPORE','YYYY-MM-DD HH24:MI:SS.FF TZR'),
            repeat_interval => 'FREQ=MINUTELY;INTERVAL=5;BYDAY=MON,TUE,WED,THU,FRI,SAT,SUN',
            end_date => NULL,
            enabled => FALSE,
            auto_drop => FALSE,
            comments => '');

         
     
 
    DBMS_SCHEDULER.SET_ATTRIBUTE( 
             name => '"SPTSHUB"."KILL_ROUGE_QUERY"', 
             attribute => 'store_output', value => TRUE);
    DBMS_SCHEDULER.SET_ATTRIBUTE( 
             name => '"SPTSHUB"."KILL_ROUGE_QUERY"', 
             attribute => 'logging_level', value => DBMS_SCHEDULER.LOGGING_OFF);
      
   
  
    
    DBMS_SCHEDULER.enable(
             name => '"SPTSHUB"."KILL_ROUGE_QUERY"');
END;
